#logstash config
input {
    file {
        type => "log4j"
        path => [ "D:\Downloads\-\CSI-4737\logs\my\s5.log" ]
        codec => multiline {
            pattern => "(^\d+\serror)|(^.+Exception: .+)|(^\s+at .+)|(^\?s+... \d+ more)|(^\s*Caused by:.+)"
            what => "previous"
        }
        start_position => "beginning"
        sincedb_path => "D:\dev\prj\elk\4737-p\.sincedb"
    }
}

filter {
    #remove_tag => [ "_grokparsefailure" ]
    #break_on_match => false
    if [type] == "log4j" {
        grok {
            patterns_dir => "./patterns"
	    match => [ "message", "%{LOG4JLOG}" ]
        }
        date {
            match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ] 
        }
        #filter { ruby { code => "" } }
        if [logmessage] =~ "(\[Operation\:CDAPercolate\-)" {
            mutate { add_tag => [ "percolate", "keep" ] }
        }
        else if [message] =~ "^END FILE" { # add END FILE to each the input log
            mutate { add_tag => ["endfile", "keep"] }
        }
        if "keep" not in [tags] {
            ruby { code => "event.cancel" }
        }
    }
    if [type] == "log4j" and "multiline" in [tags] {
        grok { match => [ "message", "%{JAVASTACKTRACEPART}" ] }
    }
}

output {
#   stdout
    cdaout {
        silent => true
    }
    if "endfile" in [tags] {
        exit {
#            pause_second => 1
            exit_code => 99
        }
    }
}

