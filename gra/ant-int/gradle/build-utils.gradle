import org.gradle.internal.os.OperatingSystem

ext {
    loadProperties = { String sourceFileName ->
        def propertiesFile = new File("${sourceFileName}")
        if (propertiesFile.exists()) {
            println "Loading properties from file '${sourceFileName}'"
            def config = new Properties()
            config.load(new FileInputStream(propertiesFile))
            config.each {
                key, value -> project.ext[key] = value
            }
        } else {
            println "Properties file '${sourceFileName}' does not exist"
        }
    }
    loadNlpModulesProperties = { String sourceFileName ->
        loadProperties(sourceFileName)
        // println "nlp.modules.version: ${project.'nlp.modules.version'}"
    }
}

ext.getCurrentOS = {
    def currentOS = 'windows'
    if (!OperatingSystem.current().isWindows()) {
        currentOS = 'linux'
    }
    return currentOS
}

ext {
    platform = getCurrentOS() == 'windows' ? 'windows-x64' : 'linux-x64'
    isWin = { return OperatingSystem.current().isWindows() }

    getSOSuffix = { return isWin() ? 'dll' : 'so' }
    soSuffix = getSOSuffix()

    getLIBPrefix = { return isWin() ? '' : 'lib' }
    libPrefix = getLIBPrefix()
}
